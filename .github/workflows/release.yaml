name: Tag & Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version
        required: false

jobs:
  tag:
    runs-on: ubuntu-latest
    if: github.repository == 'adobe/aio-lib-java-cloudmanager' && github.ref == 'refs/heads/main'

    outputs:
      version: ${{ steps.store-version.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: maven

      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: Tag DryRun with Maven
        if: ${{ inputs.dryRun }}
        run: mvn -B release:clean release:prepare -DreleaseVersion=${{ inputs.version }} -DdryRun=true

      - name: Tag with Maven
        if: ${{ !inputs.dryRun }}
        run: mvn -B release:clean release:prepare -DreleaseVersion=${{ inputs.version }}

      - name: Store Version
        id: store-version
        run: echo "::set-output name=version::$(grep ^scm.tag= release.properties | sed -e 's/scm.tag=aio-lib-cloudmanager-//g')"

  github-release:
    needs: tag
    runs-on: ubuntu-latest
    if: ${{ !inputs.dryRun }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: aio-lib-cloudmanager-${{ needs.tag.outputs.version }}

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: maven

      - name: Maven Verify
        run: mvn -U clean verify && mvn verify -P java8

      - name: Generate Release Changelog
        id: generate-release-changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          configuration: ".github/.release-changelog-config.json"
          toTag: aio-lib-java-cloudmanager-${{ needs.Tag.outputs.version }}

      - name: Create Release
        id: create-release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: aio-lib-cloudmanager-${{ needs.tag.outputs.version }}
          name: aio-lib-cloudmanager-${{ needs.tag.outputs.version }}
          body: ${{ steps.generate-release-changelog.outputs.changelog }}
          draft: false
          prerelease: false
          files: |
            ./target/aio-lib-cloudmanager-*.jar

  maven-central-deploy:
    needs: tag
    runs-on: ubuntu-latest
    if: ${{ !inputs.dryRun }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: aio-lib-cloudmanager-${{ needs.tag.outputs.version }}

      # See https://github.com/actions/setup-java#publishing-using-apache-maven
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: maven
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Import GPG key
        env:
          GPG_SECRET_KEYS: ${{ secrets.GPG_SECRET_KEYS }}
          GPG_OWNERTRUST: ${{ secrets.GPG_OWNERTRUST }}
        run: |
          echo $GPG_SECRET_KEYS | base64 --decode | gpg --import --no-tty --batch --yes
          echo $GPG_OWNERTRUST | base64 --decode | gpg --import-ownertrust --no-tty --batch --yes

      - name: Build Java8 Artifact
        run: mvn clean package -P release,java8
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Publish to Apache Maven Central
        run: mvn deploy -P release,attach-javadoc,attach-source,attach-java8 -DautoReleaseAfterClose=true
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  changelog:
    runs-on: ubuntu-latest
    needs: tag
    if: ${{ !inputs.dryRun }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - name: Build Changelog Fragment
        id: build_changelog_fragment
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          configuration: ".github/.release-changelog-config.json"
          toTag: aio-lib-java-cloudmanager-${{ needs.Tag.outputs.version }}
          outputfile: fragment.md

      - name: Build Changelog
        run: |
          sed -i '/^#.*Changelog/,/## \[aio-lib-cloudmanager/{
          /^#.*Changelog/p
          /^#.*Changelog/a\
          
          /^#.*Changelog/r fragment.md
          
          /^## \[aio-lib-cloudmanager/! d
          
          /## \[aio-lib-cloudmanager/i\
          
          }' CHANGELOG.md

      - name: Commit Changelog
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com
          git add CHANGELOG.md
          git commit -m 'Update Changelog.'
          git push
