/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/main/swagger-specs/api.yaml.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.adobe.aio.cloudmanager.impl.generated;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.Serializable;
/**
 * Description of a domain name to validate
 */
@Schema(description = "Description of a domain name to validate")


public class DomainNameValidate implements Serializable{
  private static final long serialVersionUID = 1L;
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("environmentId")
  private Long environmentId = null;

  @JsonProperty("certificateId")
  private Long certificateId = null;

  public DomainNameValidate name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the domain name
   * @return name
  **/
  @Schema(example = "customer.domain.com", required = true, description = "Name of the domain name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DomainNameValidate environmentId(Long environmentId) {
    this.environmentId = environmentId;
    return this;
  }

   /**
   * The environment id
   * @return environmentId
  **/
  @Schema(required = true, description = "The environment id")
  public Long getEnvironmentId() {
    return environmentId;
  }

  public void setEnvironmentId(Long environmentId) {
    this.environmentId = environmentId;
  }

  public DomainNameValidate certificateId(Long certificateId) {
    this.certificateId = certificateId;
    return this;
  }

   /**
   * The certificate id
   * @return certificateId
  **/
  @Schema(required = true, description = "The certificate id")
  public Long getCertificateId() {
    return certificateId;
  }

  public void setCertificateId(Long certificateId) {
    this.certificateId = certificateId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DomainNameValidate domainNameValidate = (DomainNameValidate) o;
    return Objects.equals(this.name, domainNameValidate.name) &&
        Objects.equals(this.environmentId, domainNameValidate.environmentId) &&
        Objects.equals(this.certificateId, domainNameValidate.certificateId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, environmentId, certificateId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DomainNameValidate {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    certificateId: ").append(toIndentedString(certificateId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
