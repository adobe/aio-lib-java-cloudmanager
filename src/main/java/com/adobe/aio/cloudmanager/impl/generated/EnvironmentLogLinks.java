/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/main/swagger-specs/api.yaml.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.adobe.aio.cloudmanager.impl.generated;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.Serializable;
/**
 * EnvironmentLogLinks
 */



public class EnvironmentLogLinks implements Serializable{
  private static final long serialVersionUID = 1L;
  @JsonProperty("http://ns.adobe.com/adobecloud/rel/logs/download")
  private HalLink httpnsAdobeComadobecloudrellogsdownload = null;

  @JsonProperty("http://ns.adobe.com/adobecloud/rel/logs/tail")
  private HalLink httpnsAdobeComadobecloudrellogstail = null;

  public EnvironmentLogLinks httpnsAdobeComadobecloudrellogsdownload(HalLink httpnsAdobeComadobecloudrellogsdownload) {
    this.httpnsAdobeComadobecloudrellogsdownload = httpnsAdobeComadobecloudrellogsdownload;
    return this;
  }

   /**
   * Get httpnsAdobeComadobecloudrellogsdownload
   * @return httpnsAdobeComadobecloudrellogsdownload
  **/
  @Schema(description = "")
  public HalLink getHttpnsAdobeComadobecloudrellogsdownload() {
    return httpnsAdobeComadobecloudrellogsdownload;
  }

  public void setHttpnsAdobeComadobecloudrellogsdownload(HalLink httpnsAdobeComadobecloudrellogsdownload) {
    this.httpnsAdobeComadobecloudrellogsdownload = httpnsAdobeComadobecloudrellogsdownload;
  }

  public EnvironmentLogLinks httpnsAdobeComadobecloudrellogstail(HalLink httpnsAdobeComadobecloudrellogstail) {
    this.httpnsAdobeComadobecloudrellogstail = httpnsAdobeComadobecloudrellogstail;
    return this;
  }

   /**
   * Get httpnsAdobeComadobecloudrellogstail
   * @return httpnsAdobeComadobecloudrellogstail
  **/
  @Schema(description = "")
  public HalLink getHttpnsAdobeComadobecloudrellogstail() {
    return httpnsAdobeComadobecloudrellogstail;
  }

  public void setHttpnsAdobeComadobecloudrellogstail(HalLink httpnsAdobeComadobecloudrellogstail) {
    this.httpnsAdobeComadobecloudrellogstail = httpnsAdobeComadobecloudrellogstail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvironmentLogLinks environmentLogLinks = (EnvironmentLogLinks) o;
    return Objects.equals(this.httpnsAdobeComadobecloudrellogsdownload, environmentLogLinks.httpnsAdobeComadobecloudrellogsdownload) &&
        Objects.equals(this.httpnsAdobeComadobecloudrellogstail, environmentLogLinks.httpnsAdobeComadobecloudrellogstail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(httpnsAdobeComadobecloudrellogsdownload, httpnsAdobeComadobecloudrellogstail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvironmentLogLinks {\n");
    
    sb.append("    httpnsAdobeComadobecloudrellogsdownload: ").append(toIndentedString(httpnsAdobeComadobecloudrellogsdownload)).append("\n");
    sb.append("    httpnsAdobeComadobecloudrellogstail: ").append(toIndentedString(httpnsAdobeComadobecloudrellogstail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
