/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/main/swagger-specs/api.yaml.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.adobe.aio.cloudmanager.impl.model;

/*-
 * #%L
 * Adobe Cloud Manager Client Library
 * %%
 * Copyright (C) 2020 - 2022 Adobe Inc.
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

import java.util.Objects;
import java.util.Arrays;
import com.adobe.aio.cloudmanager.impl.model.PipelineExecutionStepStateDetailsEnvironmentUrls;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
/**
 * Details available for each step state. The set of properties available will vary by the step action.
 */
@Schema(description = "Details available for each step state. The set of properties available will vary by the step action.")

public class PipelineExecutionStepStateDetails implements Serializable{
  private static final long serialVersionUID = 1L;
  @JsonProperty("deployCommands")
  private String deployCommands = null;

  @JsonProperty("currentDeployCommandId")
  private String currentDeployCommandId = null;

  @JsonProperty("environmentUrls")
  private List<PipelineExecutionStepStateDetailsEnvironmentUrls> environmentUrls = null;

  @JsonProperty("deploymentStepDescription")
  private String deploymentStepDescription = null;

  @JsonProperty("input")
  private Object input = null;

  public PipelineExecutionStepStateDetails deployCommands(String deployCommands) {
    this.deployCommands = deployCommands;
    return this;
  }

   /**
   * For deploy steps, a JSON array encoded as a string which lists the deployment activities expected to be performed.
   * @return deployCommands
  **/
  @Schema(description = "For deploy steps, a JSON array encoded as a string which lists the deployment activities expected to be performed.")
  public String getDeployCommands() {
    return deployCommands;
  }

  public void setDeployCommands(String deployCommands) {
    this.deployCommands = deployCommands;
  }

  public PipelineExecutionStepStateDetails currentDeployCommandId(String currentDeployCommandId) {
    this.currentDeployCommandId = currentDeployCommandId;
    return this;
  }

   /**
   * For deploy steps, the current identifier from the deployCommands which is being executed.
   * @return currentDeployCommandId
  **/
  @Schema(description = "For deploy steps, the current identifier from the deployCommands which is being executed.")
  public String getCurrentDeployCommandId() {
    return currentDeployCommandId;
  }

  public void setCurrentDeployCommandId(String currentDeployCommandId) {
    this.currentDeployCommandId = currentDeployCommandId;
  }

  public PipelineExecutionStepStateDetails environmentUrls(List<PipelineExecutionStepStateDetailsEnvironmentUrls> environmentUrls) {
    this.environmentUrls = environmentUrls;
    return this;
  }

  public PipelineExecutionStepStateDetails addEnvironmentUrlsItem(PipelineExecutionStepStateDetailsEnvironmentUrls environmentUrlsItem) {
    if (this.environmentUrls == null) {
      this.environmentUrls = new ArrayList<>();
    }
    this.environmentUrls.add(environmentUrlsItem);
    return this;
  }

   /**
   * For deploy steps, the the set of URLs for the environment.
   * @return environmentUrls
  **/
  @Schema(description = "For deploy steps, the the set of URLs for the environment.")
  public List<PipelineExecutionStepStateDetailsEnvironmentUrls> getEnvironmentUrls() {
    return environmentUrls;
  }

  public void setEnvironmentUrls(List<PipelineExecutionStepStateDetailsEnvironmentUrls> environmentUrls) {
    this.environmentUrls = environmentUrls;
  }

  public PipelineExecutionStepStateDetails deploymentStepDescription(String deploymentStepDescription) {
    this.deploymentStepDescription = deploymentStepDescription;
    return this;
  }

   /**
   * For deploy steps, a JSON array encoded as a string which includes the detailed list of deployment activities which have been performed.
   * @return deploymentStepDescription
  **/
  @Schema(description = "For deploy steps, a JSON array encoded as a string which includes the detailed list of deployment activities which have been performed.")
  public String getDeploymentStepDescription() {
    return deploymentStepDescription;
  }

  public void setDeploymentStepDescription(String deploymentStepDescription) {
    this.deploymentStepDescription = deploymentStepDescription;
  }

  public PipelineExecutionStepStateDetails input(Object input) {
    this.input = input;
    return this;
  }

   /**
   * Input provided when advancing the step. See documentation at https://www.adobe.io/experience-cloud/cloud-manager/guides/api-usage/advancing-and-cancelling-steps/ for details.
   * @return input
  **/
  @Schema(description = "Input provided when advancing the step. See documentation at https://www.adobe.io/experience-cloud/cloud-manager/guides/api-usage/advancing-and-cancelling-steps/ for details.")
  public Object getInput() {
    return input;
  }

  public void setInput(Object input) {
    this.input = input;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineExecutionStepStateDetails pipelineExecutionStepStateDetails = (PipelineExecutionStepStateDetails) o;
    return Objects.equals(this.deployCommands, pipelineExecutionStepStateDetails.deployCommands) &&
        Objects.equals(this.currentDeployCommandId, pipelineExecutionStepStateDetails.currentDeployCommandId) &&
        Objects.equals(this.environmentUrls, pipelineExecutionStepStateDetails.environmentUrls) &&
        Objects.equals(this.deploymentStepDescription, pipelineExecutionStepStateDetails.deploymentStepDescription) &&
        Objects.equals(this.input, pipelineExecutionStepStateDetails.input);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deployCommands, currentDeployCommandId, environmentUrls, deploymentStepDescription, input);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineExecutionStepStateDetails {\n");
    
    sb.append("    deployCommands: ").append(toIndentedString(deployCommands)).append("\n");
    sb.append("    currentDeployCommandId: ").append(toIndentedString(currentDeployCommandId)).append("\n");
    sb.append("    environmentUrls: ").append(toIndentedString(environmentUrls)).append("\n");
    sb.append("    deploymentStepDescription: ").append(toIndentedString(deploymentStepDescription)).append("\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
