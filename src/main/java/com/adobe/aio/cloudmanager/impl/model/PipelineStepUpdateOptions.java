/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/main/swagger-specs/api.yaml.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.adobe.aio.cloudmanager.impl.model;

/*-
 * #%L
 * Adobe Cloud Manager Client Library
 * %%
 * Copyright (C) 2020 - 2022 Adobe Inc.
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
/**
 * PipelineStepUpdateOptions
 */


public class PipelineStepUpdateOptions implements Serializable{
  private static final long serialVersionUID = 1L;
  @JsonProperty("dispatcherCacheInvalidationPaths")
  private List<String> dispatcherCacheInvalidationPaths = null;

  @JsonProperty("dispatcherCacheFlushPaths")
  private List<String> dispatcherCacheFlushPaths = null;

  public PipelineStepUpdateOptions dispatcherCacheInvalidationPaths(List<String> dispatcherCacheInvalidationPaths) {
    this.dispatcherCacheInvalidationPaths = dispatcherCacheInvalidationPaths;
    return this;
  }

  public PipelineStepUpdateOptions addDispatcherCacheInvalidationPathsItem(String dispatcherCacheInvalidationPathsItem) {
    if (this.dispatcherCacheInvalidationPaths == null) {
      this.dispatcherCacheInvalidationPaths = new ArrayList<>();
    }
    this.dispatcherCacheInvalidationPaths.add(dispatcherCacheInvalidationPathsItem);
    return this;
  }

   /**
   * For deploy steps on AMS pipelines, list of paths to invalidate on dispatchers after package installation.
   * @return dispatcherCacheInvalidationPaths
  **/
  @Schema(description = "For deploy steps on AMS pipelines, list of paths to invalidate on dispatchers after package installation.")
  public List<String> getDispatcherCacheInvalidationPaths() {
    return dispatcherCacheInvalidationPaths;
  }

  public void setDispatcherCacheInvalidationPaths(List<String> dispatcherCacheInvalidationPaths) {
    this.dispatcherCacheInvalidationPaths = dispatcherCacheInvalidationPaths;
  }

  public PipelineStepUpdateOptions dispatcherCacheFlushPaths(List<String> dispatcherCacheFlushPaths) {
    this.dispatcherCacheFlushPaths = dispatcherCacheFlushPaths;
    return this;
  }

  public PipelineStepUpdateOptions addDispatcherCacheFlushPathsItem(String dispatcherCacheFlushPathsItem) {
    if (this.dispatcherCacheFlushPaths == null) {
      this.dispatcherCacheFlushPaths = new ArrayList<>();
    }
    this.dispatcherCacheFlushPaths.add(dispatcherCacheFlushPathsItem);
    return this;
  }

   /**
   * For deploy steps on AMS pipelines, list of paths to flush on dispatchers after package installation.
   * @return dispatcherCacheFlushPaths
  **/
  @Schema(description = "For deploy steps on AMS pipelines, list of paths to flush on dispatchers after package installation.")
  public List<String> getDispatcherCacheFlushPaths() {
    return dispatcherCacheFlushPaths;
  }

  public void setDispatcherCacheFlushPaths(List<String> dispatcherCacheFlushPaths) {
    this.dispatcherCacheFlushPaths = dispatcherCacheFlushPaths;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineStepUpdateOptions pipelineStepUpdateOptions = (PipelineStepUpdateOptions) o;
    return Objects.equals(this.dispatcherCacheInvalidationPaths, pipelineStepUpdateOptions.dispatcherCacheInvalidationPaths) &&
        Objects.equals(this.dispatcherCacheFlushPaths, pipelineStepUpdateOptions.dispatcherCacheFlushPaths);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dispatcherCacheInvalidationPaths, dispatcherCacheFlushPaths);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineStepUpdateOptions {\n");
    
    sb.append("    dispatcherCacheInvalidationPaths: ").append(toIndentedString(dispatcherCacheInvalidationPaths)).append("\n");
    sb.append("    dispatcherCacheFlushPaths: ").append(toIndentedString(dispatcherCacheFlushPaths)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
