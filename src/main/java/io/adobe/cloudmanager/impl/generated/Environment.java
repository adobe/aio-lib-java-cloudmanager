/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/main/swagger-specs/api.yaml.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.adobe.cloudmanager.impl.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.adobe.cloudmanager.impl.generated.EnvironmentLinks;
import io.adobe.cloudmanager.impl.generated.LogOptionRepresentation;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
/**
 * A representation of an Environment known to Cloud Manager.
 */
@Schema(description = "A representation of an Environment known to Cloud Manager.")


public class Environment implements Serializable{
  private static final long serialVersionUID = 1L;
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("programId")
  private String programId = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("description")
  private String description = null;

  /**
   * Type of the environment
   */
  public enum TypeEnum {
    DEV("dev"),
    STAGE("stage"),
    PROD("prod"),
    RDE("rde");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  /**
   * Status of the environment
   */
  public enum StatusEnum {
    CREATING("creating"),
    READY("ready"),
    DELETING("deleting"),
    DELETED("deleted"),
    UPDATING("updating"),
    FAILED("failed"),
    DEPLOY_FAILED("deploy_failed"),
    CREATED("created"),
    RESTORING("restoring"),
    RESTORE_FAILED("restore_failed"),
    RESETTING("resetting"),
    RESET_FAILED("reset_failed"),
    DEGRADED("degraded");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("region")
  private String region = null;

  @JsonProperty("availableLogOptions")
  private List<LogOptionRepresentation> availableLogOptions = null;

  @JsonProperty("_links")
  private EnvironmentLinks _links = null;

  public Environment id(String id) {
    this.id = id;
    return this;
  }

   /**
   * id
   * @return id
  **/
  @Schema(description = "id")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Environment programId(String programId) {
    this.programId = programId;
    return this;
  }

   /**
   * Identifier of the program. Unique within the space.
   * @return programId
  **/
  @Schema(example = "14", description = "Identifier of the program. Unique within the space.")
  public String getProgramId() {
    return programId;
  }

  public void setProgramId(String programId) {
    this.programId = programId;
  }

  public Environment name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the environment
   * @return name
  **/
  @Schema(example = "AcmeCorp Dev1 Environment", description = "Name of the environment")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Environment description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the environment
   * @return description
  **/
  @Schema(example = "This is our primary development environment", description = "Description of the environment")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Environment type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of the environment
   * @return type
  **/
  @Schema(example = "dev", description = "Type of the environment")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Environment status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the environment
   * @return status
  **/
  @Schema(example = "creating", description = "Status of the environment")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Environment region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Region of the environment
   * @return region
  **/
  @Schema(example = "va7", description = "Region of the environment")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public Environment availableLogOptions(List<LogOptionRepresentation> availableLogOptions) {
    this.availableLogOptions = availableLogOptions;
    return this;
  }

  public Environment addAvailableLogOptionsItem(LogOptionRepresentation availableLogOptionsItem) {
    if (this.availableLogOptions == null) {
      this.availableLogOptions = new ArrayList<>();
    }
    this.availableLogOptions.add(availableLogOptionsItem);
    return this;
  }

   /**
   * List of logs available in the environment
   * @return availableLogOptions
  **/
  @Schema(description = "List of logs available in the environment")
  public List<LogOptionRepresentation> getAvailableLogOptions() {
    return availableLogOptions;
  }

  public void setAvailableLogOptions(List<LogOptionRepresentation> availableLogOptions) {
    this.availableLogOptions = availableLogOptions;
  }

  public Environment _links(EnvironmentLinks _links) {
    this._links = _links;
    return this;
  }

   /**
   * Get _links
   * @return _links
  **/
  @Schema(description = "")
  public EnvironmentLinks getLinks() {
    return _links;
  }

  public void setLinks(EnvironmentLinks _links) {
    this._links = _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Environment environment = (Environment) o;
    return Objects.equals(this.id, environment.id) &&
        Objects.equals(this.programId, environment.programId) &&
        Objects.equals(this.name, environment.name) &&
        Objects.equals(this.description, environment.description) &&
        Objects.equals(this.type, environment.type) &&
        Objects.equals(this.status, environment.status) &&
        Objects.equals(this.region, environment.region) &&
        Objects.equals(this.availableLogOptions, environment.availableLogOptions) &&
        Objects.equals(this._links, environment._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, programId, name, description, type, status, region, availableLogOptions, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Environment {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    programId: ").append(toIndentedString(programId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    availableLogOptions: ").append(toIndentedString(availableLogOptions)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
