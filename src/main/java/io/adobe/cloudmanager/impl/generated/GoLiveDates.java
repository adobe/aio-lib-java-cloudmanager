/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/main/swagger-specs/api.yaml.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.adobe.cloudmanager.impl.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.Serializable;
/**
 * Contains planned and actual go live dates of a program
 */
@Schema(description = "Contains planned and actual go live dates of a program")


public class GoLiveDates implements Serializable{
  private static final long serialVersionUID = 1L;
  @JsonProperty("plannedDate")
  private String plannedDate = null;

  @JsonProperty("actualDate")
  private String actualDate = null;

  public GoLiveDates plannedDate(String plannedDate) {
    this.plannedDate = plannedDate;
    return this;
  }

   /**
   * Date when go live is planned
   * @return plannedDate
  **/
  @Schema(description = "Date when go live is planned")
  public String getPlannedDate() {
    return plannedDate;
  }

  public void setPlannedDate(String plannedDate) {
    this.plannedDate = plannedDate;
  }

  public GoLiveDates actualDate(String actualDate) {
    this.actualDate = actualDate;
    return this;
  }

   /**
   * Date when the program completed go live
   * @return actualDate
  **/
  @Schema(description = "Date when the program completed go live")
  public String getActualDate() {
    return actualDate;
  }

  public void setActualDate(String actualDate) {
    this.actualDate = actualDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoLiveDates goLiveDates = (GoLiveDates) o;
    return Objects.equals(this.plannedDate, goLiveDates.plannedDate) &&
        Objects.equals(this.actualDate, goLiveDates.actualDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(plannedDate, actualDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoLiveDates {\n");
    
    sb.append("    plannedDate: ").append(toIndentedString(plannedDate)).append("\n");
    sb.append("    actualDate: ").append(toIndentedString(actualDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
