/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/main/swagger-specs/api.yaml.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.adobe.cloudmanager.impl.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.Serializable;
/**
 * Describes feedback
 */
@Schema(description = "Describes feedback")


public class NewFeedback implements Serializable{
  private static final long serialVersionUID = 1L;
  @JsonProperty("createdAt")
  private String createdAt = null;

  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("rating")
  private Integer rating = null;

  @JsonProperty("comment")
  private String comment = null;

  /**
   * Type of feedback
   */
  public enum TypeEnum {
    GO_LIVE("GO_LIVE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("options")
  private Object options = null;

  public NewFeedback createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Created time
   * @return createdAt
  **/
  @Schema(description = "Created time")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public NewFeedback id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of the feedback. Unique within the space.
   * @return id
  **/
  @Schema(description = "Identifier of the feedback. Unique within the space.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public NewFeedback rating(Integer rating) {
    this.rating = rating;
    return this;
  }

   /**
   * Rating values from 1 to 5
   * @return rating
  **/
  @Schema(required = true, description = "Rating values from 1 to 5")
  public Integer getRating() {
    return rating;
  }

  public void setRating(Integer rating) {
    this.rating = rating;
  }

  public NewFeedback comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Feedback comment
   * @return comment
  **/
  @Schema(description = "Feedback comment")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public NewFeedback type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of feedback
   * @return type
  **/
  @Schema(required = true, description = "Type of feedback")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public NewFeedback options(Object options) {
    this.options = options;
    return this;
  }

   /**
   * Optional information about the feedback
   * @return options
  **/
  @Schema(description = "Optional information about the feedback")
  public Object getOptions() {
    return options;
  }

  public void setOptions(Object options) {
    this.options = options;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewFeedback newFeedback = (NewFeedback) o;
    return Objects.equals(this.createdAt, newFeedback.createdAt) &&
        Objects.equals(this.id, newFeedback.id) &&
        Objects.equals(this.rating, newFeedback.rating) &&
        Objects.equals(this.comment, newFeedback.comment) &&
        Objects.equals(this.type, newFeedback.type) &&
        Objects.equals(this.options, newFeedback.options);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, id, rating, comment, type, options);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewFeedback {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
